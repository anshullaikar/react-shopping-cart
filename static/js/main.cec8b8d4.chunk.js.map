{"version":3,"sources":["Item/Item.styles.ts","Item/Item.tsx","CartItem/CartItem.styles.ts","CartItem/CartItem.tsx","Cart/Cart.styles.ts","Cart/Cart.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","aside","Cart","items","cartItems","length","map","reduce","ack","StyledButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","console","log","clickedItem","prev","find","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","getTotalItems","color","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.cec8b8d4.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    border: 1px solid lightblue;\n    border-radius: 20px;\n    \n    button{\n        border-radius: 0 0 20px 20px;\n    }\n    img{\n        max-height: 250px;\n        object-fit: cover;\n        border-radius: 20px 20px 0 0;\n    }\n    div{\n        font-family: Arial, Helvetica, sans-serif;\n        padding: 1rem;\n        height:100%;\n    }\n`;\n","import Button from \"@material-ui/core/Button\";\n// Types\nimport { FC } from \"react\";\nimport { CartItemType } from \"../App\";\n//Styles\nimport { Wrapper } from \"./Item.styles\";\n\ntype Props = {\n    item: CartItemType;\n    handleAddToCart: (clickedItem: CartItemType) => void;\n};\n\nconst Item: FC<Props> = ({ item, handleAddToCart }) => (\n    <Wrapper>\n        <img src={item.image} alt={item.title} />\n        <div>\n            <h3>{item.title}</h3>\n            <p>{item.description}</p>\n            <h3>${item.price}</h3>\n        </div>\n        <Button\n            onClick={() => {\n                handleAddToCart(item);\n            }}\n        >\n            Add To Cart\n        </Button>\n    </Wrapper>\n);\nexport default Item;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    font-family: Arial, Helvetica, sans-serif;\n    border-bottom: 1px solid lightblue;\n    padding-bottom: 20px;\n    div {\n        flex: 1;\n    }\n    .information,\n    .buttons {\n        display: flex;\n        justify-content: space-between;\n    }\n    img{\n        max-width:80px;\n        object-fit:cover;\n        margin-left:40px;\n    }\n`;\n","import Button from \"@material-ui/core/Button\";\n\n//Types\nimport { CartItemType } from \"../App\";\nimport Item from \"../Item/Item\";\n\n//Styles\nimport { Wrapper } from \"./CartItem.styles\";\n\ntype Props = {\n    item: CartItemType;\n    addToCart: (clickedItem: CartItemType) => void;\n    removeFromCart: (id: number) => void;\n};\n\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => (\n    <Wrapper>\n        <div>\n            <h3>{item.title}</h3>\n            <div className=\"information\">\n                <p>Price: ${item.price}</p>\n                <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\n            </div>\n            <div className=\"buttons\">\n                <Button\n                    size=\"small\"\n                    disableElevation\n                    variant=\"contained\"\n                    onClick={() => removeFromCart(item.id)}\n                >\n                    -\n                </Button>\n                <p>{item.amount}</p>\n                <Button\n                    size=\"small\"\n                    disableElevation\n                    variant=\"contained\"\n                    onClick={() => addToCart(item)}\n                >\n                    +\n                </Button>\n            </div>\n        </div>\n        <img src={item.image} alt={item.title} />\n    </Wrapper>\n);\n\nexport default CartItem;\n","import styled from \"styled-components\"\n\nexport const Wrapper = styled.aside`\n    font-family: Arial, Helvetica, sans-serif;\n    width:500px;\n    padding:20px;\n`","import CartItem from \"../CartItem/CartItem\";\n\n//Styles\nimport { Wrapper } from \"./Cart.styles\";\n\n//Types\nimport { CartItemType } from \"../App\";\n\ntype Props = {\n    cartItems: CartItemType[];\n    addToCart: (clickedItem: CartItemType) => void;\n    removeFromCart: (id: number) => void;\n};\n\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\n    const calculateTotal = (items: CartItemType[]) => items.reduce((ack:number, item) => ack + item.amount*item.price, 0)\n    return (\n        <Wrapper>\n            <h2>Your Shopping Cart</h2>\n            {cartItems.length === 0 ? <p>No Items in Cart</p> : null}\n            {cartItems.map((item) => (\n                <CartItem\n                    key={item.id}\n                    item={item}\n                    addToCart={addToCart}\n                    removeFromCart={removeFromCart}\n                />\n            ))}\n            <h2>Total : ${calculateTotal(cartItems).toFixed(2)}</h2>\n        </Wrapper>\n    );\n};\nexport default Cart;\n","import styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\"\nexport const Wrapper = styled.div`\n    margin: 40px;\n`;\nexport const StyledButton = styled(IconButton)`\n    position:fixed;\n    z-index:100;\n    right:20px;\n    top:20px;\n\n`;","import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Item from \"./Item/Item\";\nimport Cart from \"./Cart/Cart\";\n// Components\nimport Drawer from \"@material-ui/core/Drawer\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport Badge from \"@material-ui/core/Badge\";\n// Styles\nimport { Wrapper, StyledButton } from \"./App.styles\";\n\nexport type CartItemType = {\n    id: number;\n    category: string;\n    description: string;\n    image: string;\n    price: number;\n    title: string;\n    amount: number;\n};\nconst getProducts = async (): Promise<CartItemType[]> =>\n    await (await fetch(\"https://fakestoreapi.com/products\")).json();\n\nconst App = () => {\n    const [cartOpen, setCartOpen] = useState(false);\n    const [cartItems, setCartItems] = useState([] as CartItemType[]);\n    const { data, isLoading, error } = useQuery<CartItemType[]>(\n        \"products\",\n        getProducts\n    );\n    console.log(data);\n    const getTotalItems = (cartItems: CartItemType[]) =>\n        cartItems.reduce((ack: number, item) => ack + item.amount, 0);\n    const handleAddToCart = (clickedItem: CartItemType) => {\n        setCartItems((prev) => {\n            //Is the item in the cart?\n            const isItemInCart = prev.find(\n                (item) => item.id === clickedItem.id\n            );\n\n            if (isItemInCart) {\n                return prev.map((item) =>\n                    item.id === clickedItem.id\n                        ? { ...item, amount: item.amount + 1 }\n                        : item\n                );\n            }\n            //if first time item is added\n            return [...prev, { ...clickedItem, amount: 1 }];\n        });\n    };\n    const handleRemoveFromCart = (id: number) => {\n        setCartItems(prev => (\n            prev.reduce((ack, item) => {\n                if (item.id === id) {\n                    if (item.amount === 1) return ack;\n                    return [...ack, { ...item, amount: item.amount - 1 }];\n                } else {\n                    return [...ack, item];\n                }\n            }, [] as CartItemType[])\n        )\n        );\n    };\n    if (isLoading) return <LinearProgress />;\n    if (error) return <div>Something went wrong</div>;\n    return (\n        <Wrapper>\n            <Drawer\n                anchor=\"right\"\n                open={cartOpen}\n                onClose={() => setCartOpen(false)}\n            >\n                <Cart\n                    cartItems={cartItems}\n                    addToCart={handleAddToCart}\n                    removeFromCart={handleRemoveFromCart}\n                />\n            </Drawer>\n            <StyledButton onClick={() => setCartOpen(true)}>\n                <Badge badgeContent={getTotalItems(cartItems)} color=\"error\">\n                    <AddShoppingCartIcon />\n                </Badge>\n            </StyledButton>\n            <Grid container spacing={3}>\n                {data?.map((item: CartItemType) => (\n                    <Grid item key={item.id} xs={12} sm={4}>\n                        <Item item={item} handleAddToCart={handleAddToCart} />\n                    </Grid>\n                ))}\n            </Grid>\n        </Wrapper>\n    );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst client = new QueryClient();\nReactDOM.render(\n    <QueryClientProvider client={client}>\n        <App />\n    </QueryClientProvider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}